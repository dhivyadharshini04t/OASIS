import java.util.HashMap;
import java.util.Scanner;

public class OnlineReservationSystem {
    public static void main(String[] args) {
        LoginForm loginForm = new LoginForm();
        ReservationSystem reservationSystem = new ReservationSystem();
        Scanner scanner = new Scanner(System.in);

        System.out.println("Welcome to the Online Reservation System");
        boolean loggedIn = false;

        while (!loggedIn) {
            System.out.print("Enter Username: ");
            String username = scanner.nextLine();
            System.out.print("Enter Password: ");
            String password = scanner.nextLine();

            if (loginForm.login(username, password)) {
                loggedIn = true;
                System.out.println("Login Successful!");
            } else {
                System.out.println("Invalid credentials, please try again.");
            }
        }

        while (true) {
            System.out.println("\n1. Make a Reservation");
            System.out.println("2. Cancel a Reservation");
            System.out.println("3. Exit");
            System.out.print("Choose an option: ");
            int choice = Integer.parseInt(scanner.nextLine());

            switch (choice) {
                case 1:
                    System.out.print("Enter PNR: ");
                    String pnr = scanner.nextLine();
                    System.out.print("Enter Train Number: ");
                    String trainNumber = scanner.nextLine();
                    System.out.print("Enter Train Name: ");
                    String trainName = scanner.nextLine();
                    System.out.print("Enter Class Type: ");
                    String classType = scanner.nextLine();
                    System.out.print("Enter Date of Journey: ");
                    String dateOfJourney = scanner.nextLine();
                    System.out.print("Enter From: ");
                    String from = scanner.nextLine();
                    System.out.print("Enter To: ");
                    String to = scanner.nextLine();

                    reservationSystem.makeReservation(pnr, trainNumber, trainName, classType, dateOfJourney, from, to);
                    break;

                case 2:
                    System.out.print("Enter PNR to cancel: ");
                    String cancelPnr = scanner.nextLine();
                    Reservation reservation = reservationSystem.getReservation(cancelPnr);
                    if (reservation != null) {
                        System.out.println("Reservation Details: " + reservation);
                        System.out.print("Confirm cancellation (yes/no): ");
                        String confirm = scanner.nextLine();
                        if (confirm.equalsIgnoreCase("yes")) {
                            reservationSystem.cancelReservation(cancelPnr);
                            System.out.println("Reservation cancelled successfully.");
                        } else {
                            System.out.println("Cancellation aborted.");
                        }
                    } else {
                        System.out.println("Reservation not found.");
                    }
                    break;

                case 3:
                    System.out.println("Exiting the system. Goodbye!");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid choice, please try again.");
            }
        }
    }
}

class LoginForm {
    private HashMap<String, String> users = new HashMap<>();

    public LoginForm() {
        // Predefined users
        users.put("user1", "password1");
        users.put("user2", "password2");
    }

    public boolean login(String username, String password) {
        return users.containsKey(username) && users.get(username).equals(password);
    }
}

class ReservationSystem {
    private HashMap<String, Reservation> reservations = new HashMap<>();

    public void makeReservation(String pnr, String trainNumber, String trainName, String classType, String dateOfJourney, String from, String to) {
        Reservation reservation = new Reservation(pnr, trainNumber, trainName, classType, dateOfJourney, from, to);
        reservations.put(pnr, reservation);
        System.out.println("Reservation successful: " + reservation);
    }

    public Reservation getReservation(String pnr) {
        return reservations.get(pnr);
    }

    public void cancelReservation(String pnr) {
        reservations.remove(pnr);
    }
}

class Reservation {
    String pnr, trainNumber, trainName, classType, dateOfJourney, from, to;

    public Reservation(String pnr, String trainNumber, String trainName, String classType, String dateOfJourney, String from, String to) {
        this.pnr = pnr;
        this.trainNumber = trainNumber;
        this.trainName = trainName;
        this.classType = classType;
        this.dateOfJourney = dateOfJourney;
        this.from = from;
        this.to = to;
    }

    @Override
    public String toString() {
        return "PNR: " + pnr + ", Train Number: " + trainNumber + ", Train Name: " + trainName + 
               ", Class Type: " + classType + ", Date of Journey: " + dateOfJourney + 
               ", From: " + from + ", To: " + to;
    }
}
